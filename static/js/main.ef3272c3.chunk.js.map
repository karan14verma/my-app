{"version":3,"sources":["logo.svg","Card/Duck/Types.ts","Card/Duck/Reducers.ts","Card/Duck/Actions.ts","Card/Services/ApiDataConverter.ts","Card/Services/ApiService.ts","Card/Duck/Operations.ts","Duck/Index.ts","State/Store.ts","index.tsx","Item/Components/ListItem.tsx","Item/Containers/ListItemContainer.tsx","Common/Components/CreateNewItem.tsx","Card/Containers/CreateNewItemContainer.tsx","Card/Components/CardComponent.tsx","Card/Containers/CardContainer.tsx","App.tsx","registerServiceWorker.ts"],"names":["module","exports","__webpack_require__","p","Types","ITEMS_IS_LOADING","ITEMS_HAS_ERRORED","ITEMS_FETCH_DATA_SUCCESS","ITEMS_POST_DATA_SUCCESS","ITEMS_POST_DATA_HAS_ERRORED","ITEMS_POST_DATA_IS_LOADING","ITEM_CREATE_IN_STORE","initialState","byId","allIds","ItemReducer","state","action","type","__assign","items","_a","item","concat","Actions","hasErrored","isLoading","data","_b","__values","Object","keys","_c","next","done","key","value","push","getItems","Services_ApiService","ApiService","getAllItems","callBacks","createItem","EndPoint","loadItems","service","dispatch","onBegin","onEnd","onSuccess","onFailure","error","Duck_Index","redux","composeEnhancers","store","Components_ListItem","_super","ListItem","_this","apply","this","arguments","isChecked","onChange","event","checked","setState","target","__extends","prototype","render","text","react","className","props","Checkbox","Containers_ListItemContainer","ListItemContainer","ListItemContainer_extends","children","Components_CreateNewItem","CreateNewItem","isOkToProceed","trim","handleKeyPress","charCode","handleOnCreate","handleChange","onValueChange","CreateNewItem_extends","Input","placeholder","defaultValue","inputProps","aria-label","onKeyPress","CreateNewItemContainer_CreateNewItemContainer","CreateNewItemContainer","console","log","createNewItem","CreateNewItemContainer_extends","newItemState","Containers_CreateNewItemContainer","react_redux_es","content","Components_CardComponent","CardComponent","CardComponent_extends","Card","raised","listItems","map","CardContainer_CardContainer","CardContainer","CardContainer_extends","Containers_CardContainer","src_App","App","App_extends","src","logo_default","a","alt","isLocalhost","Boolean","window","location","hostname","match","register","navigator","URL","toString","origin","addEventListener","swUrl","fetch","then","response","status","headers","get","indexOf","serviceWorker","ready","registration","unregister","reload","registerValidSW","catch","checkValidServiceWorker","onupdatefound","installingWorker","installing","onstatechange","controller","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","es","react_dom","document","getElementById"],"mappings":"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","file":"static/js/main.ef3272c3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","// ---------- ITEMS\nconst ITEMS_IS_LOADING = 'ITEMS_IS_LOADING';\nconst ITEMS_HAS_ERRORED = 'ITEMS_HAS_ERRORED';\nconst ITEMS_FETCH_DATA_SUCCESS = 'ITEMS_FETCH_DATA_SUCCESS';\n// ---------- Create ITEMS\nconst ITEMS_POST_DATA_SUCCESS = 'ITEMS_POST_DATA_SUCCESS';\nconst ITEMS_POST_DATA_HAS_ERRORED = 'ITEMS_POST_DATA_HAS_ERRORED';\nconst ITEMS_POST_DATA_IS_LOADING = 'ITEMS_POST_DATA_IS_LOADING';\nconst ITEM_CREATE_IN_STORE = 'ITEM_CREATE_IN_STORE'\n\nexport default {\n\tITEMS_IS_LOADING,\n\tITEMS_HAS_ERRORED,\n\tITEMS_FETCH_DATA_SUCCESS,\n\tITEMS_POST_DATA_SUCCESS,\n\tITEMS_POST_DATA_HAS_ERRORED,\n\tITEMS_POST_DATA_IS_LOADING,\n\tITEM_CREATE_IN_STORE\n};","import { AnyAction } from 'redux';\nimport types from './Types';\nimport ItemCollection from '../../Common/Models/ItemCollection'\n\n// export type IItemReducerState<T> = {\n// \tbyId: { [id: string]: T };\n// \tallIds: string[];\n// \tconstructor() {\n// \t\tthis.byId = {};\n// \t\tthis.allIds = [];\n// \t}\n// };\n\nexport type IItemReducerState = ItemCollection<string>;\n\nconst initialState: IItemReducerState = {\n\tbyId: {},\n\tallIds: [],\n}\n\nexport const items = (state: any, action: AnyAction) => {\n\treturn (action.type === types.ITEMS_FETCH_DATA_SUCCESS)\n\t? state\n\t: [];\n}\n\nexport default function ItemReducer(state: IItemReducerState = initialState, action: AnyAction) {\n\tif (action.type === types.ITEMS_FETCH_DATA_SUCCESS) {\n\t\treturn {\n\t\t\t...state,\n\t\t\t...action.items,\n\t\t};\n\t}\n\tif(action.type === types.ITEM_CREATE_IN_STORE) {\n\t\treturn{\n\t\t\t...state,\n\t\t\tbyId: { ...state.byId, [action.item]: action.item},\n\t\t\tallIds: state.allIds.concat(action.item),\n\t\t}\n\t}\n\n\treturn state;\n}\n","import { getItems } from '../Services/ApiDataConverter';\nimport types from './Types';\n\n// Items\nexport const loadItemsHasErrored = (hasErrored: boolean) => {\n\treturn {\n\t\thasErrored,\n\t\ttype: types.ITEMS_HAS_ERRORED,\n\t};\n};\n\nexport const loadItemsIsLoading = (isLoading: boolean) => {\n\treturn {\n\t\tisLoading,\n\t\ttype: types.ITEMS_IS_LOADING,\n\t};\n};\n\nexport const loadItemsSuccess = (data: any) => {\n\tconst items = getItems(data);\n\treturn {\n\t\titems,\n\t\ttype: types.ITEMS_FETCH_DATA_SUCCESS,\n\t};\n};\n\n// Create Item\nconst createItemIsLoading = (isLoading: boolean) => {\n\treturn {\n\t\tisLoading,\n\t\ttype: types.ITEMS_POST_DATA_IS_LOADING,\n\t};\n};\n\nconst createItemSuccess = (item: string) => {\n\treturn {\n\t\titem,\n\t\ttype: types.ITEMS_POST_DATA_SUCCESS,\n\t};\n};\n\nconst createItemHasErrored = (hasErrored: boolean) => {\n\treturn {\n\t\thasErrored,\n\t\ttype: types.ITEMS_POST_DATA_HAS_ERRORED,\n\t};\n};\n\nconst createItemInStore = (item: string) => {\n\treturn{\n\t\ttype: types.ITEM_CREATE_IN_STORE,\n\t\titem\n\t}\n}\n\nexport default {\n    createItemHasErrored,\n    createItemIsLoading,\n\tcreateItemSuccess,\n\tcreateItemInStore,\n    loadItemsHasErrored,\n\tloadItemsIsLoading,\n\tloadItemsSuccess,\n};","export const getItems = (data: any): string[] => {\n\tconst items = [];\n\tfor (const key of Object.keys(data)) {\n\t\titems.push(key);\n\t}\n\treturn items;\n};\n","class ApiService {\n\tstatic EndPoint = 'Items';\n\n\tstatic getAllItems(callBacks: any) {\n\t\t// nothing happening here until API work is done\n        return['1', '2'];\n    }\n    \n    static createItem(item: string, callBacks: any) {\n\t\t// nothing happening here until api work done\n        return;\n\t}\n}\n\nexport default ApiService;\n","import ApiService from '../Services/ApiService';\nimport actions from './Actions';\nimport { RequestCallBacks } from 'src/Common/Services/ApiServiceWrapper';\n\n// Load Items\nexport const loadItems = (service = ApiService) => {\n\n\treturn (dispatch: any) => {\n\t\tconst callBacks = {\n\t\t\tonBegin: () => {\n\t\t\t\tdispatch(actions.loadItemsIsLoading(true));\n\t\t\t},\n\t\t\tonEnd: () => {\n\t\t\t\tdispatch(actions.loadItemsIsLoading(false));\n\t\t\t},\n\t\t\tonSuccess: (data: object) => {\n\t\t\t\tdispatch(actions.loadItemsSuccess(data));\n\t\t\t},\n\t\t\tonFailure: (error: Error) => {\n\t\t\t\tdispatch(actions.loadItemsHasErrored(true));\n\t\t\t\t// showError(error, content);\n\t\t\t},\n\t\t} as any;\n\n\t\treturn service.getAllItems(callBacks);\n\t};\n};\n\n// Create Item\nexport const createItem = (item: string, content?: any, service = ApiService) => {\n\treturn (dispatch: any) => {\n\t\tconst callBacks = {\n\t\t\tonBegin: () => {\n\t\t\t\t// dispatch(actions.createItemInStore(item));\n\t\t\t\tdispatch(actions.createItemIsLoading(true));\n\t\t\t},\n\t\t\tonEnd: () => {\n\t\t\t\tdispatch(actions.createItemIsLoading(false));\n\t\t\t},\n\t\t\tonSuccess: (data: object) => {\n\t\t\t\tdispatch(actions.createItemSuccess(item));\n\t\t\t},\n\t\t\tonFailure: (error: Error) => {\n\t\t\t\tdispatch(actions.createItemHasErrored(true));\n\t\t\t\t// showError(error, content);\n\t\t\t},\n\t\t} as RequestCallBacks;\n\n\t\tdispatch(actions.createItemInStore(item));\n\n\t\treturn service.createItem(item, callBacks);\n\t};\n};\n\n","import { combineReducers } from 'redux';\nimport items, { IItemReducerState } from '../Card/Duck/Reducers'\n\nexport interface IRootState {\n\treadonly items: IItemReducerState;\n}\n\nexport default combineReducers<IRootState>({\n\titems,\n});","import { createStore, applyMiddleware, compose } from 'redux';\nimport rootReducer from '../Duck/Index';\nimport thunk from 'redux-thunk';\n\nexport default function configureStore() {\n\tconst composeEnhancers = (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\treturn createStore(\n\t\trootReducer,\n\t\tcomposeEnhancers(applyMiddleware(thunk))\n\t);\n}","import { loadItems } from \"./Card/Duck/Index\";\nimport configureStore from \"./State/Store\";\nimport * as ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport * as React from \"react\";\nimport App from './App';\nimport './css/index.css';\nimport registerServiceWorker from './registerServiceWorker';\n\nfunction renderApp() {\n\t// This code starts up the React app when it runs in a browser. It sets up the routing\n\t// configuration and injects the app into a DOM element.\n\t// const baseUrl = document.getElementsByTagName('base')[0].getAttribute('href')!;\n\n\t// initiate store\n\tconst store = configureStore();\n\tstore.dispatch(loadItems() as any);\n\n\tReactDOM.render(\n  (\n\t\t\t<Provider store={store}>\n\t\t\t  <App />     \n\t\t\t</Provider>\n  ),\n  document.getElementById('root') as HTMLElement\n  );\n  registerServiceWorker()\n}\n\nrenderApp();\n","import Checkbox from '@material-ui/core/Checkbox';\nimport * as React from 'react';\n\ninterface IProps{\n    value: string;\n}\n\ninterface IState{\n    isChecked: boolean; // this, when true, will add css to the label to make it crossed off\n}\n\nclass ListItem extends React.Component<IProps, IState> {\n    state={\n        isChecked : false,\n    }\n\n    onChange = (event: any, checked: boolean ) => {\n        this.setState({\n            isChecked: event.target.checked,\n        })\n    }\n\n    render() {\n        const text = this.state.isChecked ? <div className=\"strikedText\">{this.props.value}</div> : this.props.value;\n        return (\n            <React.Fragment>\n                \n                <p><Checkbox onChange={this.onChange}/> {text} </p>\n              \n            </React.Fragment>\n    );\n  }\n}\n\nexport default ListItem;\n","import * as React from 'react';\nimport  ListItem  from '../../../src/Item/Components/ListItem';\n\nclass ListItemContainer extends React.Component {\n    // this component will not get its value from this.props.children\n    // it will have to use mapdispatchtoprops and get it from redux somewhere\n    // for now it is children for simple demonstration of a component\n\n    public render() {\n        return (\n            <ListItem\n                value={this.props.children as string}\n            />\n    );\n  }\n}\n\nexport default ListItemContainer;\n","import Input from '@material-ui/core/Input';\n\nimport * as React from 'react';\n\ninterface IProps{\n    defaultValue: string;\n    state: {value: string; onValueChange(value: string): void;};\n    handleOnCreate(item: string): void;\n}\n\n\nclass CreateNewItem extends React.Component<IProps> {\n\n    isOkToProceed = () : boolean => {\n        return this.props.state.value.trim() !== '';\n    }\n\n    handleKeyPress = (event: any) => {\n\t\t  if (event.charCode === 13 && this.isOkToProceed()) {  // 'Enter' pressed\n\t  \t\tthis.props.handleOnCreate(event);\n\t  \t}\n    }\n\n    handleChange = (event: any): void => {\n\t\tthis.props.state.onValueChange(event.target.value);\n\t}\n\n    public render() {\n        return (\n            <div className={'container'}>\n                 <Input\n                    placeholder= {this.props.defaultValue}\n                    className={'input'}\n                    inputProps={{\n                        'aria-label': 'Description',\n                    }}\n                    onChange = {this.handleChange}\n                    onKeyPress = {this.handleKeyPress}\n                    value = {this.props.state.value}\n                />\n      </div>\n    );\n  }\n}\n\nexport default CreateNewItem;\n","import * as React from 'react';\nimport CreateNewItem from '../../Common/Components/CreateNewItem'\nimport { createItem } from '../Duck/Operations';\nimport { connect } from 'react-redux';\n\ninterface IProps{\n    createNewItem(item: string): void;\n}\n\ninterface IState{\n  value: string;\n}\n\nexport class CreateNewItemContainer extends React.PureComponent<IProps, IState> {\n\n  state = {\n    value: ''\n  }\n  \n  handleOnCreate = () => {\n    // to do handle props call to update store\n    console.log('handleOnCreate in CreateNewItemContainer');\n    this.props.createNewItem(this.state.value);\n    this.setState({ value: '' });\n  }\n\n  onValueChange = (value: string) => {\n\t\tthis.setState({ value });\n\t}\n\n  public render() {\n    const newItemState = {\n\t\t\tvalue: this.state.value,\n\t\t\tonValueChange: this.onValueChange,\n\t\t};\n\n    return (\n          <CreateNewItem \n            defaultValue= {'Add an item'}\n            handleOnCreate = {this.handleOnCreate}\n            state = {newItemState}\n          />\n    );\n  }\n}\n\nexport const mapDispatchToProps = (dispatch: any) => ({\n    createNewItem: (item: string): void => dispatch(createItem(item))\n})\n\nexport default connect(null, mapDispatchToProps)(CreateNewItemContainer);\n","import Card  from '@material-ui/core/Card';\nimport * as React from 'react';\nimport ListItemContainer from 'src/Item/Containers/ListItemContainer';\nimport CreateNewItemContainer from '../Containers/CreateNewItemContainer';\nimport ItemCollection from '../../Common/Models/ItemCollection'\n\ninterface IProps{\n  listItems: ItemCollection<string>\n}\n\nclass CardComponent extends React.Component<IProps> {\n  \n  public render() {\n    return (\n      <React.Fragment>\n        <Card\n        raised={true}\n        className={'card'}\n        >\n          <CreateNewItemContainer />\n          {this.props.listItems.allIds.map(item =>(\n            <ListItemContainer>\n              {item}\n           </ListItemContainer>\n          ))} \n       \n      </Card>\n      \n      </React.Fragment>\n      \n    );\n  }\n}\n\nexport default CardComponent;\n","import * as React from 'react';\nimport { connect } from 'react-redux';\nimport CardComponent from '../Components/CardComponent';\nimport ItemCollection from '../../Common/Models/ItemCollection';\n\ninterface IProps {\n  listItems: ItemCollection<string>;\n}\n\nexport class CardContainer extends React.PureComponent<IProps> {\n  // all the redux logic stays in the containers\n  // list items should come from redux\n  public render() {\n    return (\n      <CardComponent\n        listItems={this.props.listItems}\n      />\n    );\n  }\n}\nexport const mapDispatchToProps = (dispatch: any) => ({\n\n});\n\nexport const mapStateToProps = (state: any) => {\n  return {\n    listItems: state.items,\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CardContainer);","import * as React from 'react';\nimport './css/App.css';\n\nimport CardContainer from './Card/Containers/CardContainer';\nimport logo from './logo.svg';\n\nclass App extends React.Component {\n  public render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <h1 className=\"App-title\">TO DO LIST!</h1>\n        </header>\n        <CardContainer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// tslint:disable:no-console\n// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the 'N+1' visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL!,\n      window.location.toString()\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker) {\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the old content will have been purged and\n                // the fresh content will have been added to the cache.\n                // It's the perfect time to display a 'New content is\n                // available; please refresh.' message in your web app.\n                console.log('New content is available; please refresh.');\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // 'Content is cached for offline use.' message.\n                console.log('Content is cached for offline use.');\n              }\n            }\n          };\n        }\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type')!.indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n"],"sourceRoot":""}